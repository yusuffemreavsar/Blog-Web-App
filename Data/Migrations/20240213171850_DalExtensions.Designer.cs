// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240213171850_DalExtensions")]
    partial class DalExtensions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a71a730-bd2a-4cfc-8c62-216a52cf2bd4"),
                            CategoryId = new Guid("7d2aae5f-547f-49ee-8ff4-15046c4f8cd8"),
                            Content = "About Asp.net Core...",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(413),
                            ImageId = new Guid("8f770e4d-85e5-4c28-9dd3-2ca7b30c8d8d"),
                            Title = "Asp.net Core Example",
                            ViewCount = 15,
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ae7e7f60-f8d0-4c1c-9e75-c5d1f7dd5ab2"),
                            CategoryId = new Guid("942f9f84-6156-40c5-adb0-93970f70e720"),
                            Content = "About Spring Boot...",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(426),
                            ImageId = new Guid("ddd58d89-c5b1-4ce6-89d4-de833e22cd06"),
                            Title = "Spring Boot Example",
                            ViewCount = 10,
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("42bb230b-7ae4-4167-a920-78501cca15ce"),
                            CategoryId = new Guid("2ed3ec85-5fc6-43d9-b2a3-19f8523b9eae"),
                            Content = "About Node.Js...",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(458),
                            ImageId = new Guid("b0ab9960-dcf0-49ca-a313-da0f42e5e1c5"),
                            Title = "Node.Js Example",
                            ViewCount = 24,
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d2aae5f-547f-49ee-8ff4-15046c4f8cd8"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(3732),
                            Name = "Asp.net Core",
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("942f9f84-6156-40c5-adb0-93970f70e720"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(3742),
                            Name = "Spring Boot",
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2ed3ec85-5fc6-43d9-b2a3-19f8523b9eae"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(3748),
                            Name = "Node.Js",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f770e4d-85e5-4c28-9dd3-2ca7b30c8d8d"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(6640),
                            FileName = "images/testimage_1",
                            FileType = "jpg",
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ddd58d89-c5b1-4ce6-89d4-de833e22cd06"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(6650),
                            FileName = "images/testimage_2",
                            FileType = "jpg",
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b0ab9960-dcf0-49ca-a313-da0f42e5e1c5"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2024, 2, 13, 20, 18, 45, 235, DateTimeKind.Local).AddTicks(6657),
                            FileName = "images/testimage_3",
                            FileType = "jpg",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Entity.Entities.Article", b =>
                {
                    b.HasOne("Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
